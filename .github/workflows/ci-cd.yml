name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Build and Test
    - name: Build and Test
      run: mvn clean verify
      continue-on-error: true

    # Step 5: Show Test Results
    - name: Show Test Results
      if: always()
      env:
        TEST_OUTCOME: ${{ steps.run_tests.outcome }}
      run: |
        echo "ü©∫ Test outcome received: $TEST_OUTCOME"
    
        if ls target/surefire-reports/*.txt 1> /dev/null 2>&1; then
            echo "üìÑ Displaying test results:"
            cat target/surefire-reports/*.txt
        else
            echo "‚ö†Ô∏è No test result files found."
        fi
    
        if [ "$TEST_OUTCOME" = "failure" ]; then
            echo "‚ùå Tests failed."
        else
            echo "‚úÖ Tests passed."
        fi

#   deploy:
#     name: Deploy to Production
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#     # Step 1: Checkout the code
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     # Step 2: Deploy (example using SSH)
#     - name: Deploy Application
#       run: |
#         ssh -o StrictHostKeyChecking=no user@your-server-ip <<EOF
#         cd /path/to/your/application
#         git pull origin main
#         ./mvnw clean package
#         java -jar target/calculator-backend.jar
#         EOF